library(dplyr)
library(ggplot2)
source("../../Others/path_initialization.R")
source("C:/Users/dfunosas/Desktop/David/UPS/R scripts/Bird diversity report for sites démonstrateurs/bird diversity analysis.R", echo=TRUE)
source("C:/Users/dfunosas/Desktop/David/UPS/R scripts/Bird diversity report for sites démonstrateurs/bird diversity analysis.R", echo=TRUE)
library(dplyr)
library(ggplot2)
library(lubridate)
source("../Others/path_initialization.R")
source("../Others/path_initialization.R")
csv_path <- paste0(local_path, "CSVs/Bird diversity report for sites démonstrateurs/")
recordings <- read.csv(paste0(local_path, "CSVs/BirdNET/SpatialTreeP/recordings.csv"))
stations <- read.csv(paste0(local_path, "CSVs/BirdNET/SpatialTreeP/stations.csv"))
bird_species <- read.csv(paste0(local_path, "CSVs/Species lists/France/Avibase_bird_species_in_France.csv")) %>%
select("Scientific.name", "French.name")
# Loading manual identifications by remote listening
manual_bird_identification_files <- list.files(csv_path, pattern = "\\.csv$", recursive = TRUE, include.dirs = FALSE)
manual_bird_identification_files <- manual_bird_identification_files[!grepl("Results", manual_bird_identification_files)]
manual_bird_identification_files <- manual_bird_identification_files[!grepl("on the field", manual_bird_identification_files)]
manual_identifications_df <- data.frame()
for (i in 1:length(manual_bird_identification_files)) {
current_file <- manual_bird_identification_files[i]
file_array <- strsplit(current_file, "/")[[1]]
current_station <- file_array[1]
current_date <- file_array[2]
current_file_name <- file_array[3]
current_time <- gsub(":00:0000", "00:00:00", gsub("0000", ":00:00", gsub(".csv", "", strsplit(current_file_name, "_")[[1]][2])))
# Only birds
current_csv <- read.csv(paste0(csv_path, current_file))
if (nrow(current_csv) == 0) {
current_csv <- data.frame(matrix(nrow=1,ncol=6))
current_csv[1,] <- c(current_station, current_date, current_time, current_file_name, "-", "-")
colnames(current_csv) <- c("site", "recording_date", "recording_time", "recording_name", "Scientific.name", "French.name")
} else {
current_csv <- current_csv %>%
rename("Scientific.name" = "detected_species") %>%
inner_join(bird_species,
by = "Scientific.name") %>%
mutate(site = current_station,
recording_date = current_date,
recording_time = current_time,
recording_name = current_file_name) %>%
select(site, recording_date, recording_time, recording_name, Scientific.name, French.name)
}
manual_identifications_df <- rbind(manual_identifications_df, current_csv)
}
manually_annotated_recordings <- read.csv(paste0(csv_path, "Results/manually_annotated_recordings.csv"))
manual_annotations <- read.csv(paste0(csv_path, "Results/manual_annotations.csv")) %>%
left_join(manually_annotated_recordings,
by = "recording_id") %>%
rename("recording_name" = "file_name",
"Scientific.name" = "species") %>%
inner_join(bird_species,
by = "Scientific.name") %>%
select(site, recording_date, recording_time, recording_name, Scientific.name, French.name)
# Adding line automatically removed
manual_annotations <- rbind(c("Auradé", "03/06/2022", "00:00:00", "SMM00803_20220603_000000.wav", "-", "-"), manual_annotations) %>%
mutate(recording_date = format(as.Date(recording_date, format = "%d/%m/%Y"), "%Y-%m-%d"),
identification_type = "annotation")
# Adding identifications on the field
identifications_on_site <- read.csv(paste0(csv_path, "Identifications on the field.csv")) %>%
select(-French.name) %>%
left_join(bird_species,
by = "Scientific.name")
manual_annotations <- rbind(manual_annotations, identifications_on_site)
# Loading BirdNET identifications
BirdNET_identifications <- read.csv(paste0(local_path, "CSVs/BirdNET/SpatialTreeP/Results by hour/global_results_by_hour.csv")) %>%
filter(n_detections_over_90 > 0,
!(species %in% c("Ixobrychus minutus",
"Mergus merganser",
"Falco naumanni",
"Cygnus olor",
"Emberiza cia",
"Tringa nebularia",
"Ciconia ciconia",
"Locustella naevia")),
!(species == "Alcedo atthis" & station_name != "Auradé"),
!(species == "Tringa ochropus" & station_name != "Auradé")) %>% # Removing mistakes by BirdNET after verification
mutate(recording_time = case_when(nchar(as.character(recording_hour)) == 2 ~ paste0(recording_hour, ":00:00"),
TRUE ~ paste0("0", recording_hour, ":00:00")),
identifier = "BirdNET",
recording_name = paste0(gsub("-", "", as.character(recording_date)), "_", gsub(":", "", recording_time), ".wav"),
confidence = 0.9,
identification_type = "automatic") %>%
rename("site" = "station_name",
"Scientific.name" = "species") %>%
inner_join(bird_species,
by = "Scientific.name") %>%
select(site, recording_date, recording_time, recording_name, Scientific.name, French.name, identification_type, identifier, confidence)
# Combining manual identifcations (only listening) with manual annotations and BirdNET idetifications
all_identifications <- rbind(rbind(manual_identifications_df %>%
mutate(identification_type = "listening"), manual_annotations) %>%
mutate(identifier = "David Funosas",
confidence = "1",
recording_name = gsub(".csv", ".wav", recording_name)),
BirdNET_identifications) %>%
unique()
# Verification of doubtful identifications by BirdNET
filtered_BirdNET_identifications <- read.csv(paste0(local_path, "CSVs/BirdNET/SpatialTreeP/Results by hour/global_results_by_hour.csv")) %>%
filter(n_detections_over_90 > 0) %>%
mutate(recording_time = case_when(nchar(as.character(recording_hour)) == 2 ~ paste0(recording_hour, ":00:00"),
TRUE ~ paste0("0", recording_hour, ":00:00"))) %>%
left_join(stations %>%
select(station_id, station_name),
by = "station_name") %>%
left_join(recordings,
by = c("station_id", "recording_date", "recording_time"))
filtered_BirdNET_identifications %>%
filter(species == "Curruca undata") %>%
View()
library(ggrepel)
library(dplyr)
library(ggplot2)
library(viridis)
library('data.table')
library(pracma)
library(ggtext)
library(ggbreak)
library(wesanderson)
# library("ggpubr")
source("./Algorithm_version_selection.R")
library(dplyr)
library(ggrepel)
library(dplyr)
library(ggplot2)
library(viridis)
library('data.table')
library(pracma)
library(ggtext)
library(ggbreak)
library(wesanderson)
# library("ggpubr")
source("./Algorithm_version_selection.R")
cars
iris
unique(c(257,257,552,552,702,702,387,387,388,388,246,246,396,396,417,417,419,419,576,576,575,575,257,257,454,454,228,228,386,386))
setwd("./Escriptori/Màster Ecologia/TFM/R scripts/")
source("~/Escriptori/Màster Ecologia/TFM/R scripts/write_raven_pro_annotation_files.R", echo=TRUE)
View(annotations)
source("~/Escriptori/Màster Ecologia/TFM/R scripts/write_raven_pro_annotation_files.R", echo=TRUE)
source("~/Escriptori/Màster Ecologia/TFM/R scripts/BirdNET_results_analysis.R", echo=TRUE)
source("~/Escriptori/Màster Ecologia/TFM/R scripts/BirdNET_results_analysis.R", echo=TRUE)
View(global_detection_results_by_all_thresholds)
global_detection_results_by_all_thresholds[is.na(global_detection_results_by_all_thresholds)] <- 0
View(global_detection_results_by_all_thresholds)
ds_roc_auc <- -trapz(global_detection_results_by_all_thresholds$TPR, global_detection_results_by_all_thresholds$FPR)/max(global_detection_results_by_all_thresholds$FPR)
ds_pr_auc <- trapz(global_detection_results_by_all_thresholds$precision, global_detection_results_by_all_thresholds$TPR)/max(global_detection_results_by_all_thresholds$TPR)
overlap_label_regex <- qdapRegex::ex_between(overlap_label, "(", ")")[[1]]
ds_ROC_title <- paste0(case_when(algorithm == "Google" ~ "Google",
TRUE ~ overlap_label_regex), filtered_label, " - ds_ROC curve, AUC = ", round(ds_roc_auc, digits = 3))
ds_PR_title <- paste0(case_when(algorithm == "Google" ~ "Google",
TRUE ~ overlap_label_regex), filtered_label, " - ds_PR curve, AUC = ", round(ds_pr_auc, digits = 3))
# ROC curve
jpeg(file = paste0("../R plots", algorithm_text, BirdNET_version, ds_text, filtered_text, overlap_text, paste0("/", algorithm, " precision and recall analysis/ds_ROC_curve.jpeg")), width = 3300, height = 2400, res = 500)
ggplot(global_detection_results_by_all_thresholds, aes(x = FPR, y = TPR, color = minimum_confidence_threshold)) +
geom_point() +
guides(color = guide_colorbar(reverse = FALSE, barheight = 10)) +
xlab("ds_FPR") +
ylab("ds_TPR") +
ylim(c(0, 1)) +
xlim(c(0, 1)) +
labs(color = "Confidence \n  threshold") +
ggtitle(ds_ROC_title) +
theme_bw() +
# Eliminates background, gridlines, and chart border
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(hjust = 0.5,
margin = margin(0,0,10,0))
) +
# Draws x and y axis line
theme(axis.line = element_line(color = 'black'))
dev.off()
# Precision-Recall curve
jpeg(file = paste0("../R plots", algorithm_text, BirdNET_version, ds_text, filtered_text, overlap_text, paste0("/", algorithm, " precision and recall analysis/ds_PR_curve.jpeg")), width = 3300, height = 2400, res = 500)
ggplot(global_detection_results_by_all_thresholds, aes(x = TPR, y = precision, color = minimum_confidence_threshold)) +
geom_point() +
guides(color = guide_colorbar(reverse = FALSE, barheight = 10)) +
xlab("ds_recall") +
ylab("ds_precision") +
ylim(c(0.35, 1)) +
xlim(c(0, 1)) +
labs(color = "Confidence \n  threshold") +
ggtitle(ds_PR_title) +
theme_bw() +
# Eliminates background, gridlines, and chart border
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(hjust = 0.5,
margin = margin(0,0,10,0))
) +
# Draws x and y axis line
theme(axis.line = element_line(color = 'black'))
dev.off()
source("~/Escriptori/Màster Ecologia/TFM/R scripts/PR_results_analysis.R", echo=TRUE)
library(dplyr)
recording_path <- "../Recordings/Selected/"
annotations <- read.csv("../CSVs/annotations.csv")
bird_annotations <- annotations %>%
mutate(species = case_when(confidence_level == 1 ~ species,
TRUE ~ "Unidentified bird")) %>%
filter(sound_category == "Bird")
recording_ids <- unique(bird_annotations$recording_id)
recording_ids <- unique(annotations$recording_id)
View(annotations)
View(bird_annotations)
recording_ids <- unique(annotations$recording_id)
recordings_extended <- read.csv("../CSVs/recordings_extended.csv")
current_annotations <- data.frame()
# Considering BirdNET results from all four recordings linked together
for (i in 1:length(recording_ids)) {
current_annotations <- bird_annotations %>%
filter(recording_id == i) %>%
mutate(selection = row_number(),
view = "Spectrogram 1",
channel = 1,
min_frequency = round(min_frequency, 1),
max_frequency = round(max_frequency, 1)) %>%
select(selection, view, channel, initial_time, final_time, min_frequency, max_frequency, species)
# --------------Writing a Raven Pro annotation file from an Audacity annotation file------------
# Removing unnecessary tabs and spaces
annotation_string <- gsub("\\\n ", "\\\n",
gsub("\\\t\\\n", "\\\n",
gsub("\\\t ", "\\\t",
paste0("Selection	View	Channel	Begin Time (s)	End Time (s)	Low Freq (Hz)	High Freq (Hz)	Species\n",
paste(apply(t(current_annotations), 2, paste, collapse = '\t'), collapse = '\n')))))
annotation_string_array <- sapply(strsplit(annotation_string, " "), function(x){x[!x ==""]})
annotation_string <- paste(annotation_string_array, collapse = " ")
annotation_file_name <- paste0(recording_path, gsub(".txt", "_Raven_Pro.txt", (recordings_extended %>%
filter(recording_id == i))$annotation_file_path))
cat(annotation_string, file = annotation_file_name)
}
source("~/Escriptori/Màster Ecologia/TFM/R scripts/compile_PR_results.R", echo=TRUE)
